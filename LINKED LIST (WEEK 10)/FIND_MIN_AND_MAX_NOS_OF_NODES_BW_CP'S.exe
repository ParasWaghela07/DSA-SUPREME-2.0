class Solution {
public:
    vector<int> nodesBetweenCriticalPoints(ListNode* head) {
        vector<int>ans={-1,-1};
        ListNode* prev=head;
        if(prev==0){
            return ans;
        }
        ListNode* curr=head->next;
        if(curr==0){
            return ans;
        }
        ListNode* nxt=head->next->next;
        if(nxt==0){
            return ans;
        }

        int firstCP=-1;
        int lastCP=-1;
        int minDis=INT_MAX;
        int i=1;

        while(nxt){
            bool CP=((curr->val < prev->val && curr->val < nxt->val ) 
            || (curr->val > prev->val && curr->val > nxt->val )) ? true : false ;

            if(CP && firstCP ==-1){
                firstCP=i;
                lastCP=i;
            }
            else if(CP){
                minDis=min(minDis,i-lastCP);
                lastCP=i;
            }
            i++;
            prev=prev->next;
            curr=curr->next;
            nxt=nxt->next;
        }

        if(firstCP==lastCP){
            return ans;
        }
        else{
            ans[0]=minDis;
            ans[1]=lastCP-firstCP;
        }

        return ans;
    }
};